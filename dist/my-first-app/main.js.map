{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA,krDAAkrD,gBAAgB,+oB;;;;;;;;;;;ACAlsD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,qEAAqE,+H;;;;;;;;;;;;;;;;;;;;;;;;;ACAhB;AACb;AAOxC;IALA;QAME,kBAAa,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;QAC7C,gBAAW,GAAG,UAAU,CAAC;IAM3B,CAAC;IAHC,6BAAM,GAAN;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAJmC;QAAnC,+DAAS,CAAC,MAAM,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;kCAAa,qDAAM;oDAAC;IAH5C,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uIAAmC;;SAEpC,CAAC;OACW,YAAY,CAQxB;IAAD,mBAAC;CAAA;AARwB;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACI;AAGE;AAa/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;AClBtB;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\n      <!-- Add a Form with the following Inputs (and Validators)\\n           1) Mail address (should not be empty and should be an email address)\\n           2) A Dropdown which allows the user to select from three different Subscriptions (\\\"Basic\\\", \\\"Advanced\\\", \\\"Pro\\\")\\n              Set \\\"Advanced\\\" as Default\\n           3) A Password field (should not be empty)\\n           4) A Submit Button\\n\\n           Display a warning message if the Form is invalid AND was touched. Display a warning message below each input if it's invalid.\\n\\n           Upon submitting the form, you should simply print the Value of the Form to the Console.\\n           Optionally, display it in your template.\\n      -->\\n      <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"Submit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email:</label>\\n          <input\\n          type=\\\"email\\\"\\n          name=\\\"email\\\"\\n          id=\\\"email\\\"\\n          class=\\\"form-control\\\"\\n          required\\n          email\\n          ngModel\\n          #email=\\\"ngModel\\\">\\n          <span *ngIf=\\\"!email.valid && email.touched\\\">Podany email jest błędny</span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"subscription\\\">Wybierz subskrypcje:</label>\\n          <select\\n          name=\\\"subscription\\\"\\n          id=\\\"subscription\\\"\\n          class=\\\"form-control\\\"\\n          [ngModel]=\\\"selectedSub\\\">\\n            <option\\n              *ngFor=\\\"let subscription of subscriptions\\\"\\n              [value]=\\\"subscription\\\">\\n              {{ subscription }}\\n            </option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Hasło:</label>\\n          <input\\n          type=\\\"password\\\"\\n          name=\\\"password\\\"\\n          id=\\\"password\\\"\\n          class=\\\"form-control\\\"\\n          required\\n          ngModel\\n          #password=\\\"ngModel\\\">\\n          <span *ngIf=\\\"!password.valid && password.touched\\\">Podaj poprawne hasło</span>\\n        </div>\\n        <p *ngIf=\\\"!form.valid && form.touched\\\">Formularz jest niepoprawny</p>\\n        <button type=\\\"submit\\\" class=\\\"btn\\\">Submit</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  subscriptions = ['Basic', 'Advanced', 'Pro'];\n  selectedSub = 'Advanced';\n  @ViewChild('form', {static: false}) signupForm: NgForm;\n\n  Submit() {\n    console.log(this.signupForm.value);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}